{"ast":null,"code":"var _jsxFileName = \"/Users/shawnk/codeplatoon/challenges/week10/to-do-lists/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport { getLoggedInUser, login } from './api/UserAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const getUser = async () => {\n      if (localStorage.getItem(\"auth-user\") !== 'null') {\n        let response = await getLoggedInUser(localStorage.getItem(\"auth-user\"));\n        let data = await response.json();\n\n        if (data.username) {\n          setIsLoggedIn(true);\n          setUser(data);\n        }\n      }\n    };\n\n    if (!user) {\n      getUser();\n    }\n  }, [user]);\n\n  const handleLogin = async evt => {\n    evt.preventDefault();\n    let userObject = {\n      username: evt.target.username.value,\n      password: evt.target.password.value\n    };\n    let response = await login(userObject);\n    let data = await response.json();\n\n    if (data.token) {\n      localStorage.setItem(\"auth-user\", `${data.token}`);\n      setIsLoggedIn(true);\n      setUser(data.user);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.setItem(\"auth-user\", null);\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n\n  const renderLoginPage = () => {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      isLoggedIn: isLoggedIn,\n      handleLogin: handleLogin,\n      handleLogout: handleLogout,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderHomePage = () => {\n    return /*#__PURE__*/_jsxDEV(HomePage, {\n      isLoggedIn: isLoggedIn,\n      user: user,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: renderHomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: renderLoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          component: SignupPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ki3p4Ug0OIeovJYgYQgFusbAAO4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shawnk/codeplatoon/challenges/week10/to-do-lists/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","HomePage","LoginPage","SignupPage","getLoggedInUser","login","App","isLoggedIn","setIsLoggedIn","user","setUser","getUser","localStorage","getItem","response","data","json","username","handleLogin","evt","preventDefault","userObject","target","value","password","token","setItem","handleLogout","renderLoginPage","renderHomePage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport { getLoggedInUser, login } from './api/UserAPI';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const getUser = async () => {\n      if (localStorage.getItem(\"auth-user\") !== 'null') {\n        let response = await getLoggedInUser(localStorage.getItem(\"auth-user\"));\n        let data = await response.json();\n        if (data.username) {\n          setIsLoggedIn(true);\n          setUser(data);\n        }\n      }\n    }\n    if (!user) {\n      getUser();\n    }\n  }, [user])\n\n  const handleLogin = async (evt) => {\n    evt.preventDefault();\n    let userObject = {\n      username: evt.target.username.value,\n      password: evt.target.password.value,\n    }\n    let response = await login(userObject);\n    let data = await response.json();\n    if (data.token) {\n      localStorage.setItem(\"auth-user\", `${data.token}`);\n      setIsLoggedIn(true);\n      setUser(data.user);\n    }\n  }\n\n  const handleLogout = () => {\n    localStorage.setItem(\"auth-user\", null);\n    setIsLoggedIn(false);\n    setUser(null);\n  }\n\n  const renderLoginPage = () => {\n    return (\n      <LoginPage\n        isLoggedIn={isLoggedIn}\n        handleLogin={handleLogin}\n        handleLogout={handleLogout}\n        user={user}\n      />\n    )\n  }\n\n  const renderHomePage = () => {\n    return (\n      <HomePage\n        isLoggedIn={isLoggedIn}\n        user={user}\n        handleLogout={handleLogout}\n      />\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Route exact path=\"/\" render={renderHomePage} />\n          <Route exact path=\"/login\" render={renderLoginPage} />\n          <Route exact path=\"/signup\" component={SignupPage} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}